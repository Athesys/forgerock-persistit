# Copyright (c) 2005 Persistit Corporation. All Rights Reserved.
#
# The Java source code is the confidential and proprietary information
# of Persistit Corporation ("Confidential Information"). You shall
# not disclose such Confidential Information and shall use it only in
# accordance with the terms of the license agreement you entered into
# with Persistit Corporation.
#
# PERSISTIT CORPORATION MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE
# SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT
# NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
# A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. PERSISTIT CORPORATION SHALL
# NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,
# MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
#
#-----
# This properties file provides localized message names for log items.
# The property name matches a definition in LogBase.java. The associated
# template may may be modified to provide localized log messages. The Persistit
# logging subsystem replaces template replacement markers {0}, {1}, etc. with
# values from underlying implementation.
#-----
#

attribute.1 = initialized|boolean|\
 Indicates whether Persistit is currently in the initialized state.

attribute.2 = version|String|\
 The version name of the current Peristit instance.

attribute.3 = copyright|String|\
 The copyright notice for the current Persistit instance.

attribute.4 = startTime|Date|\
 The system time at which Persistit was initialized.

attribute.5 = elapsedTime|long|\
 The elapsed time since startup in milliseconds.

attribute.6 = licenseInfo|String|\
 The license properties for this Persistit instance.

attribute.7 = shutdownSuspended|boolean|\
 If true, Persistit will suspend before closing.

attribute.8 = updateSuspended|boolean|\
 If true, Persistit suspends all update operations.

attribute.9 = bufferPoolInfoArray|$BufferPoolInfo[]|\
 Array of BufferPoolInfo elements. Each element describes one buffer.

attribute.10 = volumeInfoArray|$VolumeInfo[]|\
 Array of VolumeInfo elements. Each element describes one volume.

attribute.11 = prewriteJournalInfo|$PrewriteJournalInfo|\
 Describes current status of the Prewrite Journal.

attribute.12 = prewriteJournalBufferInfoArray|$PrewriteJournalBufferInfo[]|\
 Array of PrewriteJournalBufferInfo elements. Each element describes one buffer.

method.1 = close|boolean|ACTION|\
 Attempts to close all Persistit resources and returns true if successful.

method.2 = flushAndSync|boolean|ACTION|\
 Attempts to flush all dirty buffers to disk and returns true if successful.

method.3 = getBufferInfoArray|$BufferInfo[]|INFO|\
 Returns an array of BufferInfo objects reflecting the states of \
 selected buffers from the buffer pool for the specified \
 bufferSize. The selection criteria include the \
 traversalType, includeMask and excludeMask.\
 <p />\
 The traversalType must be one of the following:\
 <p />\
 0- all buffers in the buffer pool, in order by poolIndex.\
 <p />\
 1 - buffers on the least-recently-used queue, ordered from least- to \
 most-recently used.\
 <p />\
 2 - buffers on the invalid buffer queue. These buffers will be \
 consumed first whenever a new page is copied into the pool.\
 <p />\
 The includeMask and excludeMask are applied to each \
 buffer's state to determine whether that buffer should be included in \
 the set returned by this method. If includeMask is \
 null then all buffers are included. Otherwise, only those \
 buffers whose state is selected by includeMask and is not \
 selected by excludeMask are included. Mask values are Strings \
 in which each character denotes an attribute of a buffer \
 to be included or excluded from the selection. These characters are \
 as follows: \
 <p />\
 v - Buffer must be VALID\
 <p />\
 d - Buffer must be DIRTY\
 <p />\
 <p />\
 w - Buffer must have a WRITER claim\
 <p />\
 r - Buffer must have a READER claim\
 <p />\
 p - Buffer must be PERMANENT. The head page for each \
 Volume occupies a PERMANENT buffer.\
 <p />\
 If Persistit is not initialized then this method returns an empty array. \

method.3.1 = bufferSize|int|\
 The buffer size of interest - must be 1024, 2048, 4096, 8192 or 16384.

method.3.2 = traversalType|int|\
 0: all, 1: LRU, 2:Invalid

method.3.3 = includeMask|String|\
 Combination of V (valid), D (dirty), W (has writer claim), and R (has reader claim)

method.3.4 = excludeMask|String|\
 Combination of V (valud), D (dirty), W (has writer claim), and R (has reader claim)

method.4 = startTask|long|ACTION|\
 Starts a long-running utility task, such as the integrity checker. \
 The supplied className must identify a subclass of \
 com.persistit.Task. The number and format of the \
 arguments is specific to the utility task.  The returned long value \
 is a unique task ID value used in subsequent calls to \
 the queryTaskStatus method.
 
method.4.1 = description|String|\
 Readable description of the task to be started.
 
method.4.2 = owner|String|\
 Hostname and/or username of the user who requested this task.
 
method.4.3 = className|String|\
 Class name of task to run such as "com.persistit.IntegrityCheck". The \
 identified class must be a subclass of com.persistit.Task.
 
method.4.4 = args|String[]|\
 Arguments specific to the identified task class.
 
method.4.5 = maximumTime|long|\
 Maximum time (in milliseconds) this task will be allowed to run.
 
method.4.6 = verbosity|int|\
 Controls how verbose the task will be in posting messages during execution. \
 Currently the verbosity must be 0 (normal) or 1 (verbose).

method.5 = queryTaskStatus|$TaskStatus[]|INFO|\
 Queries the current status of one or all tasks. If the specified \
 taskId value is -1, this method returns status information for all \
 currently active tasks.

method.5.1 = taskId|long|\
 The taskID for a selected task to query, or -1 for all tasks.
 
method.5.2 = details|boolean|\
 True to populate each returned TaskStatus with all new messages posted \
 by the running task.
 
method.5.3 = clear|boolean|\
 True to clear all messages returned in each TaskStatus instance. \
 Setting both details and clear to true results causes each posted message \
 to be returned only once.

method.6 = setTaskSuspended|void|ACTION|\
 Suspend or resume the task(s) identified by taskId.  If \
 taskId is -1, all tasks are modified.
 
method.6.1 =  taskId|long|\
 The taskID for a selected task to control, or -1 for all tasks.
 
method.6.2 = suspend|boolean|\
 True to suspend each selected task, false to allow them to resume.
 
method.7 = stopTask|void|ACTION|\
 Stops and optionally removes a task specified by its id value. \
 If the task is currently running, this method stops it. \
 If remove is true this method also removes the \
 Task from the task list. Otherwise the task remains on the task list \
 in the "ended" state. 

method.7.1 =  taskId|long|\
 The taskID for a selected task to stop, or -1 for all tasks.
 
method.7.2 = remove|boolean|\
 True to remove each selected task from the task list, false to \
 keep tasks on the task list in the "ended" state, allowing subsequent \
 review of progress, messages, etc.
 
#
# BufferPoolInfo
#
type.1 = BufferPoolInfo|\
 Exposes information about a buffer pool

type.1.1 = bufferSize|int|\
 Size in bytes of each buffer managed within this pool.
 
type.1.2 = bufferCount|int|\
 Number of buffers in this pool
 
type.1.3 = getCounter|long|\
 Count of lookup operations for page images in this pool. This count includes \
 both hits and misses (see hitCounter).
 
type.1.4 = hitCounter|long|\
 Count of successful lookup operations for page images in this pool. A hit is \
 counted whenever the page being sought is already available in the pool and \
 does not need to be read from disk.
 
type.1.5 = hitRatio|double|\
 The "hit ratio" - the number of hits divided by the number of \
 overall gets.  A value close to 1.0 indicates that most attempts to \
 find data in the pool are successful - i.e., that \
 the cache is effectively reducing the need for disk read operations.
 
type.1.6 = validPageCount|int|\
 The count of valid pages in this pool.
 
type.1.7 = dirtyPageCount|int|\
 The count of dirty pages (pages that contain updates not \
 yet written to disk) in this pool.

type.1.8 = readerClaimedPageCount|int|\
 The count of pages on which running threads have reader \
 (non-exclusive), but <i>not</i> writer (exclusive) claims in this \
 pool.

type.1.9 = writerClaimedPageCount|int|\
 The count of pages on which running threads have writer \
 (exclusive) claims in this pool.

type.1.10 = reservedPageCount|int|\
 The count of pages having space reserved in the prewrite journal \
 in preparation for receiving updates.


#
# BufferInfo
#

type.2 = BufferInfo|\
 Exposes information about one Buffer
 
type.2.1 = poolIndex|int|\
 Position of this buffer within the BufferPool

type.2.2 = typeName|String|\
 The type of page occupying this buffer in \
 displayable name form. Values include "Unused", \
 "Data", "IndexNN", "Garbage", "LongRecord" and "Unallocated" \
 where NN indicates index level counting from the leaf data \
 page.
 
type.2.3 = statusName|String|\
 The status of this buffer in displayable form. \
 Character flags in the string value include: \
 v (valid), \
 r (has a reader claim), \
 w (has a writer claim), \
 d (is dirty). \
 If the buffer has at least one reader or writer claim, the number \
 of threads holding claims is appended.
 
type.2.4 = writerThreadName|String|\
 The name of the thread that currently holds a \
 writer (exclusive) claim on the buffer if there is one, \
 else null.
 
type.2.5 = pageAddress|long|\
 The page address of the page currently occupying the \
 buffer. The address is an ordinal number that indicates \
 the page's position within a volume file. In a standard Volume, \
 page address P is located at file address \
 P * pageSize. Page address 0 denotes the \
 head page of the Volume.
 
type.2.6 = rightSiblingAddress|long|\
 The page address of the next page in key order on this level.
 
type.2.7 = volumeName|String|\
 The full pathname of the Volume of the page occupying \
 this buffer if there is one, otherwise returns null.
 
type.2.8 = volumeId|long|\
 The internal ID value of the Volume of the page occupying \
 this buffer if there is one, else 0.
 
type.2.9 = generation|long|\
 The generation number for this buffer. This \
 number increases as the state of the buffer changes.
 
type.2.10 = reservation|long|\
 The reservation id for this buffer, or 0 if it \
 is not reserved. A buffer is in the reserved state during updates.
 
type.2.11 = changeCount|long|\
 The number of times the state of the page occuping this buffer \
 has changed since the page was first allocated.
 
type.2.12 = bufferSize|int|\
 The size the buffer, in bytes.

type.2.13 = availableSize|int|\
 The number of unused bytes available to hold additional key/value pairs.
 
type.2.14 = displayableSummary|String|\
 A human-readable summary of information about the page contained in this buffer.
 
type.2.15 = acquisitionTime|Date|\
 Date and time at which information in this element was acquired. 

#
# VolumeInfo
#
type.3 = VolumeInfo|\
 Exposes information about one Volume
 
type.3.1 = pageSize|int|\
 The page size for this Volume. All pages in a volume must be the same size \
 which must be 1024, 2048, 8192 or 16384.

type.3.2 = pathName|String|\
 Full path name of the file containing the volume.

type.3.3 = id|long|\
 Unique internal identifier for this volume.

type.3.4 = createTime|Date|\
 Date and time when this volume was created.

type.3.5 = openTime|Date|\
 Date and time when this volume was opened.

type.3.6 = lastReadTime|Date|\
 Date and time when the most recent file read occurred.

type.3.7 = lastWriteTime|Date|\
 Date and time when the most recent file write occurred.

type.3.8 = lastExtensionTime|Date|\
 Date and time when the most recent file extension occurred.

type.3.9 = generation|long|\
 Generation number for this volume.  The generation number increases as the \
 structural state of the volume changes.

type.3.10 = getCounter|long|\
 The number of get operations on this volume. A \
 get operation occurs when a thread attempts to find or update \
 information on the page, regardless of whether the page had \
 previously been copied into the buffer pool.

type.3.11 = readCounter|long|\
 The number of physical read operations performed against \
 pages in this volume.  A read occurs only when Persistit \
 requires the content of a page that has not already been copied into \
 the buffer pool or which has become invalid.

type.3.12 = writeCounter|long|\
 The number of physical write operations performed against \
 pages in this volume.

type.3.13 = fetchCounter|long|\
 The count of Exchange#fetch operations.  These include \
 Exchange#fetchAndStore and Exchange#fetchAndRemove \
 operations. This count is maintained  within the stored volume and is not \
 reset when Persistit closes. It is provided to assist in application \
 performance tuning.

type.3.14 = traverseCounter|long|\
 Returns the count of Exchange#traverse operations. These \
 include Exchange#next, Exchange#previous and \
 other derivative operations. This count is maintained \
 within the stored Volume and is not reset when Persistit \
 closes. It is provided to assist in application performance tuning.

type.3.15 = storeCounter|long|\
 The count of Exchange#store operations, including \
 Exchange#fetchAndStore operations. This count is maintained \
 within the stored Volume and is not reset when Persistit closes. \
 It is provided to assist in application performance tuning.

type.3.16 = removeCounter|long|\
 The count of Exchange#remove operations, including \
 Exchange#fetchAndRemove operations. This count is maintained \
 within the stored Volume and is not reset when Persistit closes. \
 It is provided to assist in application performance tuning.

type.3.17 = currentSize|long|\
 The current size in bytes of this volume.

type.3.18 = maximumPageAddress|long|\
 The largest page address currently in use within the volume.

type.3.19 = maximumSize|long|\
 The maximum size in bytes to which this volume may grow.

type.3.20 = extensionSize|long|\
 The size in bytes by which Persistit will extend this \
 volume when additional file space is required.

type.3.21 = alias|String|\
 This volume's alias if one was assigned in the system configuration, \
 otherwise null.
 
type.3.22 = acquisitionTime|Date|\
 Date and time at which information in this element was acquired. 

#
# TreeInfo
#

type.4 = TreeInfo|\
 Exposes information about one Persistit Tree.
 
type.4.1 = index|int|\
 An integer used internally to identify the tree.
 
type.4.2 = name|String|\
 The name of the tree.
 
type.4.3 = rootPageAddress|long|\
 The page address of the index root.
 
type.4.4 = depth|int|\
 The count of levels in the tree.
 
type.4.5 = volumePathName|String|\
 The path name of the volume to which this tree belongs.
 
type.4.6 = status|String|\
 The status of this tree in displayable form. \
 Character flags in the string value include: \
 v (valid), \
 r (has a reader claim), \
 w (has a writer claim), \
 d (is dirty). \
 If the tree has at least one reader or writer claim, the number \
 of threads holding claims is appended.
 
type.4.7 = writerThreadName|String|\
 The name of the thread that currently holds a \
 writer (exclusive) claim on the tree if there is one, \
 else null.
 
#
# PrewriteJournalInfo
#
type.5 = PrewriteJournalInfo|\
 Exposes information about the prewrite journal.
 
type.5.1 = open|boolean|\
 True if the PrewriteJournal subsystem is open.

type.5.2 = syncIO|boolean|\
 True if synchronous I/O has been enabled by the system configuration. When \
 enabled, every file write is followed by a sync request to the operating \
 system.

type.5.3 = deleteOnClose|boolean|\
 True if delete-on-close is enabled.  If so then on normal shutdown \
 Persistit will delete the prewrite journal file.

type.5.4 = quiescent|boolean|\
 True if the prewrite journal is fully caught up. \
 This is a transient indication valid only instantaneously.

type.5.5 = pwjbSize|long|\
 The configured size of each prewrite journal buffer.

type.5.6 = pwjbCount|int|\
 The number of prewrite journal buffers.

type.5.7 = writerPollInterval|long|\
 The maximum time, in milliseconds, before a dirty buffer \
 (a buffer with modified content) will be written to its the \
 backing volume file. 

type.5.8 = openTime|Date|\
 The time at which this PrewriteJournal was opened.

type.5.9 = pathName|String|\
 Full path name of the prewrite journal file.

type.5.10 = currentGeneration|long|\
 The generation counter for the current generation. This \
 counter increases each time a prewrite journal buffer becomes \
 newly available to receive updates.

type.5.11 = committedGeneration|long|\
 The generation counter for the most recently committed \
 generation. This counter increases each time a generation becomes \
 committed. A committed generation contains updates that are \
 guaranteed to be present subsequent to recovery in the event of \
 an abrupt termination.

type.5.12 = reservationCount|long|\
 The count of pages reserved in the current generation.
 
type.5.13 = unreservationCount|long|\
 The count of page reservations subsequently removed from the current \
 generation

#
# PrewriteJournalBufferInfo
#
type.6 = PrewriteJournalBufferInfo|\
 Exposes information about one prewrite journal buffer.

type.6.1 = index|int|\
 The index number of this PrewriteJournalBuffer.

type.6.2 = filePosition|long|\
 The position in the prewrite journal file where this buffer \
 will be written.

type.6.3 = generation|long|\
 Tthe generation currently being held in this PrewriteJournalBuffer.

type.6.4 = state|String|\
 Returns the current state of this <tt>PrewriteJournalBuffer</tt> \
 generation. Possible states are: EMPTY, OPEN, CLOSED, COPYING, \
 COMMITTING, WRITING, DONE
 
type.6.5 = nextAvail|long|\
 Offset to first unused byte in this PrewriteJournalBuffer generation.

type.6.6 = reservedBufferCount|int|\
 Count of pages reserved in this PrewriteJournalBuffer generation. 

type.6.7 = copiedBufferCount|int|\
 Count of pages actually copied into thisPrewriteJournalBuffer generation.

type.6.8 = writtenBufferCount|int|\
 Count of pages written from this PrewriteJournalBuffer generation \
 into the volume file.
 
type.6.9 = stopped|boolean|\
 Indicates whether the thread servicing this \
 PrewriteJournalBuffer should stop. This flag is \
 set during Persistit shutdown.

type.6.10 = timeSinceLastCommitted|long|\
 The time interval, in milliseconds, since the pages contained \
 in this PrewriteJournalBuffer were last committed to the \
 prewrite journal file
 
type.6.11 = timeSinceLastWritten|long|\
 The time interval, in milliseconds, since the pages contained \
 in this PrewriteJournalBuffer were last written to their \
 respective volume files.


#
# TaskStatus
#

type.7 = TaskStatus|\
 Structure that describes the current status of a long-running utility task.

type.7.1 = taskId|long|\
 The unique TaskID for this task.
 
type.7.2 = description|String|\
 Description of this task.

type.7.3 = owner|String|\
 The owner (hostname and/or username) of the initiator of this task

type.7.4 = state|int|\
 The state code: 0=not started, 1=running, 2=suspended, 3=done, \
 4=failed, 5=ended, 6=expired.

type.7.5 = stateString|String|\
 The state of this task represented as one of these strings: \
 "notStarted", "running", "done", "suspended", "failed", \
 "ended", or "expired".

type.7.6 = statusSummary|String|\
 A short (under 40 character) readable string summarizing the current \
 progress status of this task.

type.7.7 = statusDetail|String|\
 A detailed description of the current progress status of this task.

type.7.8 = messages|String[]|\
 Messages that have been posted by this task.\

type.7.9 = startTime|Date|\
 Time at which this task started, or null if it hasn't started yet.

type.7.10 = finishTime|Date|\
 Time at which this task ended, whether normally or abnormally, or \
 null if has not ended yet.

type.7.11 = expirationTime|Date|\
 Time at which this task is schedule to be stopped if it has not \
 finish normally yet.

type.7. = lastException|Exception|\
 The most recent exception thrown by this task, represented as a string \
 with stack trace, or null if no exception has been thrown.







