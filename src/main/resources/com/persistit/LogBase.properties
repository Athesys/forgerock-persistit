# Copyright (c) 2004 Persistit Corporation. All Rights Reserved.
#
# The Java source code is the confidential and proprietary information
# of Persistit Corporation ("Confidential Information"). You shall
# not disclose such Confidential Information and shall use it only in
# accordance with the terms of the license agreement you entered into
# with Persistit Corporation.
#
# PERSISTIT CORPORATION MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE
# SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT
# NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
# A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. PERSISTIT CORPORATION SHALL
# NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,
# MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
#
#-----
# This properties file provides localized message names for log items.
# The property name matches a definition in LogBase.java.  The associated
# template may may be modified to provide localized log messages.  The Persistit
# logging subsystem replaces template replacement markers {0}, {1}, etc. with
# values from underlying implementation.
#-----
#
START = {0} log started at {1}
END = log ended
LICENSE = License information: {0}
LICENSE_EXPIRED = License expired: {0}
EXCEPTION = {0}
INIT_ALLOCATE_BUFFERS = Allocating {0} buffers of size {1} bytes
INIT_OPEN_VOLUME = Opening volume {0}
INIT_RECOVER_BEGIN = Recovering from dirty shutdown 
INIT_RECOVER_PLAN = Recovery plan: {0}
INIT_RECOVER_END = Recovery completed
TXN_RECOVERY_START = Transaction recovery started
TXN_RECOVERY_FAILURE = Exception {0} during transaction recovery
TXN_RECOVERY_END = Transaction recovery completed: {0} commited, {1} rolled back
TXN_EXCEPTION = Exception {0} in transaction {1}
TXN_NOT_COMMITTED = Transaction neither committed nor rolled back {0}
RECOVERY_FAILURE1 = Volume {0} is not available and cannot be recovered
RECOVERY_FAILURE2 = Failed to recover page {0} because Volme {5} is unavailable
INIT_CREATE_GUI = Creating diagnostic GUI
UNRESERVED_DIRTY = marking unreserved or unclaimed buffer {0} dirty!
PWJ = prewrite journal status:{0}
RETRY_FAIL_SEARCH = Timeout in search on key="{0}"
RETRY_FAIL_STORE = Timeout in store on key="{0}"
RETRY_FAIL_REMOVE = Timeout in removeKeyRangeInternal(key1="{0}",key2="{1}")
RETRY_FAIL_REMOVE_REINDEX = Timeout in removeKeyRangeInternal while reinserting key="{1}"
RETRY_FAIL_DEALLOC = Timeout when trying to deallocate garbage chain
RETRY_FAIL_COMMIT = Timeout when trying to commit transaction
DEFERRED_DEALLOC_FAILED = Timeout when performing deferred garbage chain deallocation
PENDING_TIMEOUT = Pending Timeout: operation has waited {0}ms - timeout will expire in {1}ms
STARTED = pwj started
NEWGEN = new generation={0}
UNRESERVE = unreserving {0}
CLOSE1 = close() - start
CLOSE2 = close() - done
ENSUREWRITTEN1 = ensureWritten() - start
ENSUREWRITTEN2 = ensureWritten() - done
WAIT_PREV_GEN1 = waitForPreviousCommit(generation={0}) - start
WAIT_PREV_GEN2 = waitForPreviousCommit(generation={0}) - done, committed={5})
COMMITTED = committed generation={0}, todo={5}
RESERVE1 = threw retry due to pwjb {0} unavailable, buffer={5}, pwj status={6}
RESERVE2 = threw retry due to buffer already reserved in unavailable generation={0}, buffer={5}, pwj status={6}
RESERVE3 = threw retry due to buffer already reserved. This generation={0}, reserved generation={1}, buffer={5}, pwj status={6}
GEN_CLOSED = pwjb generation {0} is now closed
COPY1 = copy() - copying {0} reserved pages
COPY2 = copy() - writing {0} bytes containing {1} copied pages
COPY3 = copy() - done
COPY_NOTDIRTY = reserved buffer not dirty for {0}
COMMIT1 = commit() - start
COMMIT2 = commit() - end
COMPLETED = completed work on generation {0}
WRITEPAGE1 =    write() on page {0} - start
WRITEPAGE2 =    write() on page {0} - end
MARK1 = writing completion marker - start
MARK2 = writing completion marker - end
WRITE_BLOCKED_PAGE =   writePage blocked on page {0}, blockingGeneration={1}
LATER_COMMIT =   page {0} has later commit
KICK1 = kick() thread {0} - start
KICK2 = kick() thread {0} - done - notified={1}
RESET = pwjb ({0}) is now reset and available - status={5}
WAIT1 = writer thread waiting for work: generation={0}
WAIT2 = writer thread after wait: status={0}, generation={1}, cycleTime={2}, kicked={5}, stopped={6}
WAIT3 = writer thread after copy: status={0}, generation={1}, cycleTime={2}, nextAvail={3}, kicked={5}, anythingToDo={6}
CLOSED = prewrite journal is closed - writer thread exiting
WRITE1 = writing {0} pages - start
WRITE2 = writing {0} pages - end, {1} were actually written
SET_GARBAGE_HEADER = retry in setGarbageRoot: can't reserve head buffer {0}
DEALLOCGC1 = retry in deallocGarbageChain: can't reserve garbage page {0}
DEALLOCGC2 = added new garbage chain leftPage={0}, rightPage={1} {5}
DEALLOCGC3 = no room in garbage page for new garbage chain leftPage={0}, rightPage={1}, garbageBuffer={5}
DEALLOCGC4 = retry in deallocGarbageChain: can't reserve head buffer {0}
DEALLOCGC5 = retry in deallocGarbageChain: can't reserve garbage page {0}
DEALLOCGC6 = created new garbageRoot page {0}
DEALLOCGC7 = added new garbage chain leftPage={0}, rightPage={1} {5}
READ_UNSAFE = page {0} is not safe to read
READ_OK = page {0} was read into buffer # {1}
READ_IOE = page {0} read IOException into buffer # {1}: {5}
WRITE_IOE = page {0} write IOException: {5}
ALLOC_RETRY = retry in allocPage: can't reserve garbage page {0}
ALLOC_GARROOT = garbagePage {5} is exhausted and will be allocated: allocPage={0}, new garbageRoot is @<{1}>
ALLOC_GAR = allocated allocPage={0} from garbageChain {5}
ALLOC_GAR_END = removing garbage chain {5} because rightPage={0} == nextGarbagePage
ALLOC_GAR_UPDATE = updating garbage chain {5} new leftPage={0}, rightPage={1}
EXTEND_NORMAL = extending {5}: old length={0}, new length={1}
EXTEND_BADLENGTH= invalid length while extending {5}: old length={0}, new length={1}
EXTEND_IOE = IOException {6} while extending {5}: old length={0}, new length={1}
MBEAN_EXCEPTION = failure while registring JMX MBean: {0}
MBEAN_REGISTRATION = JMX MBean {0} is registered
UNINDEXED_PAGE = Unindexed page {0} in volume={5} tree={6} - run IntegrityCheck to repair
RMI_SERVER = Management RMI Server {0} {1}
