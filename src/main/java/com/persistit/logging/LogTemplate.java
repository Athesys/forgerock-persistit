/*
 * Copyright (c) 2004 Persistit Corporation. All Rights Reserved.
 *
 * The Java source code is the confidential and proprietary information
 * of Persistit Corporation ("Confidential Information"). You shall
 * not disclose such Confidential Information and shall use it only in
 * accordance with the terms of the license agreement you entered into
 * with Persistit Corporation.
 *
 * PERSISTIT CORPORATION MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE
 * SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
 * A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. PERSISTIT CORPORATION SHALL
 * NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,
 * MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
 * 
 * Created on Mar 1, 2004
 */
package com.persistit.logging;

/**
 * A resource loaded from LogBase_XX.properties containing the template
 * for a log message and various other fields.  This class is used
 * by {@link AbstractPersistitLogger}.
 *
 * @version 1.0
 */
public class LogTemplate
{
    boolean _enabled;
    int _level;
    long _type;
    String _template;
    
    public LogTemplate(int level, long type, String template)
    {
        _level = level;
        _type = type;
        _template = template;
    }
    
    /**
     * Indicates whether log messages of this type should be written
     * @return  <tt>true</tt> if messages based on this template
     *          should be written
     */
    public boolean isEnabled()
    {
        return _enabled;
    }
    
    /**
     * Enables or disables whether log messages of this type should be written
     * @param b <tt>true</tt> to enable, <tt>false</tt> to disable
     */
    public void setEnabled(boolean b)
    {
        _enabled = b;
    }
    
    /**
     * Indicates the significance level of messages generated by this template.
     * @return  The severity, on a scale of
     * {@link AbstractPersistitLogger#FINEST} to 
     * {@link AbstractPersistitLogger#ALWAYS}.
     */
    public int getLevel()
    {
        return _level;
    }
    
    /**
     * Returns the template string, with substitution variables such as {1},
     * {2}, from which messages are generated.
     * @return  The template string
     */
    public String getTemplate()
    {
        return _template;
    }

    /**
     * Indicates the subsystem type of messages generated by this template.
     * @return  The type mask
     */
    public long getType()
    {
        return _type;
    }
    
}
