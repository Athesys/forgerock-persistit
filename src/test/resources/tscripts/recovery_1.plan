logpath $datapath$/result_$timestamp$.log


// Runs the StressRecovery test to perform transactions
// This phase is intended to be stopped by kill -9 or power stop.
// It emits a verbose stream of "tickets" for committed transactions.
// Running the recovery_2.plan script verifies that the transactions
// are present.
//
// To run this:
// 
//    java -cp ${PERSISTIT_JAR} com.persistit.test.TestRunner 
//              script=recovery_1.plan datapath=/tmp/persistit_test_data -e
//              > /tmp/persistit_test/recovery.log
//
// The -e flag causes TestRunner to exit with a non-zero status on failure.
// Cat the output to /tmp/persistit_test_data/recovery.log because that's where
// recovery_2.plan expects to find the ticket stream for verification.
//

delete $datapath$/persistit
delete $datapath$/persistit_journal*

prop buffer.memory.16384=64M,1T,256M,0.7
prop volume.1=$datapath$/persistit,create,pageSize:16384,initialSize:100M,extensionSize:100M,maximumSize:100G,alias:persistit
prop journalpath=$datapath$/persistit_journal
prop logfile=$datapath$/persistit_$timestamp$.log
prop rmiport=8081

//
// These threads won't terminate normally. Operator should kill the JVM or pull the plug
//
init

# Recovery_1 - Run transactions until crash

multithread
test com.persistit.stress.StressRecovery
test com.persistit.stress.StressRecovery
test com.persistit.stress.StressRecovery
test com.persistit.stress.StressRecovery
test com.persistit.stress.StressRecovery

close