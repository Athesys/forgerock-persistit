====
    Copyright (C) 2011 Akiban Technologies Inc.
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License, version 3,
    as published by the Free Software Foundation.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see http://www.gnu.org/licenses.
====

prop datapath=$datapath$

logpath $logpath$/result_$timestamp$.log

// ----------------------------- Unit Tests ----------------------
delete $datapath$/persistit* $datapath$/test_*

clearprops
prop buffer.count.8192=2000
prop volume.1=$datapath$/persistit_1,create,bufferSize:8192,initialPages:100,extensionPages:100,maximumPages:1M,alias:persistit
prop volume.2=$datapath$/test_system,create,bufferSize:8192,initialPages:100,extensionPages:100,maximumPages:1M
prop volume.3=$datapath$/test_txn,create,bufferSize:8192,initialPages:100,extensionPages:100,maximumPages:1M
prop journalpath=$datapath$/persistit_journal
prop rmiport=1099

init

#Unit KeyCoderTest1
test com.persistit.unit.UnitTestRunner com.persistit.unit.KeyCoderTest1
#Unit ICheck
icheck persistit

waitIfFailed Please examine the failure!
close


// ----------------------- Stress Tests ----------------------
#Stress-1 simple test

delete $datapath$/persistit*

clearprops
prop datapath=$datapath$

prop buffer.count.8192=500
prop volume.1=$datapath$/persistit,create,bufferSize:8192,initialPages:10K,extensionPages:10K,maximumPages:1M,alias:persistit
prop journal=$datapath$/persistit_journal
prop rmiport=1099

init
test com.persistit.stress.Stress1 repeat=10 count=25000 op=wrt
icheck persistit
waitIfFailed Please examine the failure!
close

#Stress-2 simple multithreaded test

delete $datapath$/persistit $datapath$/persistit_log.*

init
multithread
test com.persistit.stress.Stress1 repeat=5 count=25000 op=wrtd splay=3
test com.persistit.stress.Stress1 repeat=5 count=25000 op=wtrd splay=17
test com.persistit.stress.Stress1 repeat=5 count=25000 op=wtrd splay=19
test com.persistit.stress.Stress1 repeat=5 count=25000 op=wrtd splay=23
test com.persistit.stress.Stress1 repeat=5 count=25000 op=wrtd splay=29

icheck persistit
waitIfFailed Please examine the failure!
close

