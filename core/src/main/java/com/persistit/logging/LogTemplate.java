/**
 * Copyright (C) 2011 Akiban Technologies Inc.
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License, version 3,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses.
 */

package com.persistit.logging;

/**
 * A resource loaded from LogBase_XX.properties containing the template for a
 * log message and various other fields. This class is used by
 * {@link AbstractPersistitLogger}.
 * 
 * @version 1.0
 */
public class LogTemplate {
    boolean _enabled;
    int _level;
    long _type;
    String _template;

    public LogTemplate(int level, long type, String template) {
        _level = level;
        _type = type;
        _template = template;
    }

    /**
     * Indicates whether log messages of this type should be written
     * 
     * @return <code>true</code> if messages based on this template should be
     *         written
     */
    public boolean isEnabled() {
        return _enabled;
    }

    /**
     * Enables or disables whether log messages of this type should be written
     * 
     * @param b
     *            <code>true</code> to enable, <code>false</code> to disable
     */
    public void setEnabled(boolean b) {
        _enabled = b;
    }

    /**
     * Indicates the significance level of messages generated by this template.
     * 
     * @return The severity, on a scale of
     *         {@link AbstractPersistitLogger#FINEST} to
     *         {@link AbstractPersistitLogger#ALWAYS}.
     */
    public int getLevel() {
        return _level;
    }

    /**
     * Returns the template string, with substitution variables such as {1},
     * {2}, from which messages are generated.
     * 
     * @return The template string
     */
    public String getTemplate() {
        return _template;
    }

    /**
     * Indicates the subsystem type of messages generated by this template.
     * 
     * @return The type mask
     */
    public long getType() {
        return _type;
    }

}
