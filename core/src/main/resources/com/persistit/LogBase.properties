#
# Copyright (C) 2011 Akiban Technologies Inc.
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License, version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#

START = {0} log started at {1}
END = log ended
LICENSE = License information: {0}
LICENSE_EXPIRED = License expired: {0}
EXCEPTION = {0}
INIT_ALLOCATE_BUFFERS = Allocating {0} buffers of size {1} bytes
INIT_OPEN_VOLUME = Opening volume {0}
JOURNAL_WRITE_ERROR = Journal write failure {0} at {1}
RECOVERY_BEGIN = Starting recovery from abnormal shutdown 
RECOVERY_STATUS = Recovery status: {0}
RECOVERY_DONE = Recovery done
RECOVERY_PLAN = Recovery plan: will recover {0} pages and {1} committed transactions; will discard {2} uncommitted transactions
RECOVERY_PROGRESS = Recovery progress: {0} committed transactions applied, {1} remaining 
RECOVERY_FAILURE = Recovery failed due to {0} - the journal needs to be repaired or discarded
RECOVERY_EXCEPTION = Recovery exception {0} at timestamp {1}
INIT_RECOVER_TERMINATE = Recovery log terminated before end at {0}, {1} journal files were not processed
TXN_RECOVERY_START = Transaction recovery started
TXN_RECOVERY_FAILURE = Exception {0} during transaction recovery
TXN_RECOVERY_DONE = Recovery done: {0} pages recovered, {1} transactions applied, {2} errors encountered
TXN_RECOVERY_EXCEPTION = Transaction at {0} failed to recover: {1}
TXN_EXCEPTION = Exception {0} in transaction {1}
TXN_NOT_COMMITTED = Transaction neither committed nor rolled back {0}
CHECKPOINT_PROPOSED = Checkpoint {0} proposed
CHECKPOINT_WRITTEN = Checkpoint {0} written at {1}
CHECKPOINT_RECOVERED = Checkpoint {0} recovered at {1}
INIT_CREATE_GUI = Creating diagnostic GUI
DEFERRED_DEALLOC_FAILED = Timeout when performing deferred garbage chain deallocation
PENDING_TIMEOUT = Pending Timeout: operation has waited {0}ms - timeout will expire in {1}ms
SET_GARBAGE_HEADER = Retry in setGarbageRoot: can't reserve head buffer {0}
DEALLOCGC1 = Retry in deallocGarbageChain: can't reserve garbage page {0}
DEALLOCGC2 = Added new garbage chain leftPage={0}, rightPage={1} {5}
DEALLOCGC3 = No room in garbage page for new garbage chain leftPage={0}, rightPage={1}, garbageBuffer={5}
DEALLOCGC4 = Retry in deallocGarbageChain: can't reserve head buffer {0}
DEALLOCGC5 = Retry in deallocGarbageChain: can't reserve garbage page {0}
DEALLOCGC6 = Created new garbageRoot page {0}
DEALLOCGC7 = Added new garbage chain leftPage={0}, rightPage={1} {5}
READ_UNSAFE = Page {0} is not safe to read
READ_OK = Page {0} was read into buffer # {1}
READ_IOE = Page {0} read IOException into buffer # {1}: {5}
WRITE_IOE = Page {0} write IOException: {5}
ALLOC_RETRY = Retry in allocPage: can't reserve garbage page {0}
ALLOC_GARROOT = GarbagePage {5} is exhausted and will be allocated: allocPage={0}, new garbageRoot is @<{1}>
ALLOC_GAR = Allocated allocPage={0} from garbageChain {5}
ALLOC_GAR_END = Removing garbage chain {5} because rightPage={0} == nextGarbagePage
ALLOC_GAR_UPDATE = Updating garbage chain {5} new leftPage={0}, rightPage={1}
EXTEND_NORMAL = Extending {5}: old length={0}, new length={1}
EXTEND_LARGER = Volume {2} is already larger: has length={0}, proposed new length={1}
EXTEND_IOE = IOException {6} while extending {5}: old length={0}, new length={1}
MBEAN_EXCEPTION = Failure while registering JMX MBean: {0}
MBEAN_REGISTRATION = JMX MBean {0} is registered
UNINDEXED_PAGE = Unindexed page {0} in volume={5} tree={6} - run IntegrityCheck to repair
RMI_SERVER = Management RMI Server {0} {1}
SHUTDOWN_HOOK = Persistit closed by shutdown hook
WAIT_FOR_CLOSE = Waited {0} seconds for IO operations to finish
STRANDED = {0} has {1} stranded pages
